version: "3.4"

volumes:
  pgdata:

services:
  dragaliaapi:
    image: dragaliaapi
    container_name: dragaliaapi
    hostname: dragaliaapi
    build:
      context: .
      dockerfile: DragaliaAPI/Dockerfile
    environment:
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "80:80"
      - "5000:80"
    links:
      - postgres
    env_file:
      - .env

  #  photonstatemanager:
  #    hostname: photonstatemanager
  #    image: ${DOCKER_REGISTRY-}photonstatemanager
  #    build:
  #        context: .
  #        dockerfile: DragaliaAPI.Photon.StateManager/Dockerfile
  #    ports:
  #      - "5001:80"
  #    env_file:
  #      - .env

  postgres:
    hostname: postgres
    image: postgres:16
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    hostname: redis
    image: redis/redis-stack:7.2.0-v6
    ports:
      - "6379:6379"
      - "8001:8001"

  #seq:
  #  image: datalust/seq:latest
  #  ports:
  #    - 5340:80
  #    - 5341:5341
  #  environment:
  #    ACCEPT_EULA: "Y"
  #  volumes:
  #    - logs:/data
