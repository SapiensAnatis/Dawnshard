name: Integration test

on:
  workflow_call:
    inputs:
      project:
        type: string
        required: true
        description: "Path to project under test"

env:
  HUSKY: 0
  POSTGRES_USER: testing
  POSTGRES_PASSWORD: verystrongpassword
  PostgresOptions__DisableAutoMigration: true

jobs:
  test:
    name: Integration test
    runs-on: ubuntu-latest
    env:
      AUTOMATED_TESTING: true
    services:
      postgres:
        image: postgres:16
        ports:
          - "5432:5432"
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis/redis-stack:7.2.0-v6
        ports:
          - "6379:6379"
        options: >-
          --health-cmd "redis-cli PING"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Get project name # Remove folder from project
        id: get-name
        run: >
          echo ${{ inputs.project }} | sed 's/.*\//name=/' >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Load cache
        id: cache
        uses: actions/cache@v4
        with:
          path: .nuget-cache
          key: ${{ runner.os }}-nuget-${{ hashFiles('Directory.Packages.props') }}-${{ steps.get-name.outputs.name }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Install dependencies
        run: dotnet restore ${{ inputs.project }} --packages .nuget-cache --verbosity normal 

      - name: Test
        run: >
          dotnet test ${{ inputs.project }}
          -c Release
          --no-restore
          --logger "console;verbosity=detailed"
          --logger "trx;LogFileName=${{ steps.get-name.outputs.name }}.trx"

      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: success() || failure() # run this step even if previous step failed
        with:
          name: test-result-${{ steps.get-name.outputs.name }}
          path: ${{ inputs.project }}/TestResults/${{ steps.get-name.outputs.name }}.trx
