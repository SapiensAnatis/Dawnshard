{
    "Serilog": {
        "Filter": [
            {
                "Name": "ByExcluding",
                "Args": {
                    "expression": "EndsWith(RequestPath, '/health') and Coalesce(StatusCode, 200)=200"
                }
            },
            {
                "Name": "ByExcluding",
                "Args": {
                    "expression": "EndsWith(RequestPath, '/ping') and Coalesce(StatusCode, 204)=204"
                }
            }
        ],
        "MinimumLevel": {
            "Default": "Verbose",
            "Override": {
                "Microsoft.AspNetCore": "Warning",
                "Microsoft.EntityFrameworkCore": "Warning",
                "MudBlazor": "Warning"
            }
        },
        "WriteTo": [
            {
                "Name": "Console",
                "Args": {
                    "formatter": {
                        "type": "Serilog.Templates.ExpressionTemplate, Serilog.Expressions",
                        "template": "[{@t:yyyy-MM-dd HH:mm:ss} {@l:u3} {Substring(SourceContext, LastIndexOf(SourceContext, '.') + 1)}{#each i in [RequestId, AccountId, ViewerId]}{Concat(' ', i)}{#end}] {@m}\n{@x}"
                    },
                    "theme": "Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console"
                }
            },
            {
                "Name": "Async",
                "Args": {
                    "configure": [
                        {
                            "Name": "File",
                            "Args": {
                                "formatter": {
                                    "type": "Serilog.Templates.ExpressionTemplate, Serilog.Expressions",
                                    "template": "[{@t:yyyy-MM-dd HH:mm:ss} {@l:u3} {Substring(SourceContext, LastIndexOf(SourceContext, '.') + 1)}{#each i in [RequestId, AccountId, ViewerId]}{Concat(' ', i)}{#end}] {@m}\n{@x}"
                                },
                                "path": "logs/dragaliaapi_.log",
                                "rollingInterval": "Day",
                                "rollOnFileSizeLimit": true,
                                "fileSizeLimitBytes": 1000000000,
                                "retainedFileCountLimit": 14
                            }
                        }
                    ]
                }
            }
        ]
    },
    "AllowedHosts": "*",
    "ConnectionStrings": {
        "RedisHost": "redis",
        "PostgresHost": "postgres"
    },
    "Login": {
        "UseBaasLogin": true
    },
    "Baas": {
        "TokenIssuer": "LukeFZ",
        "TokenAudience": "baas-Id",
        "BaasUrl": "https://baas.lukefz.xyz",
        "ClientId": "your-client-id",
        "ChallengeString": "challenge"
    },
    "PhotonOptions": {
        "ServerUrl": "your-photon-server.com:5055",
        "StateManagerUrl": "https://your-photon-state-manager.com"
    },
    "Dragalipatch": {
        "Mode": "RAW",
        "CdnUrl": "http://lathna.xyz"
    },
    "HashSalt": "dragalia",
    "Redis": {
        "SessionExpiryTimeMinutes": 60,
        "DungeonExpiryTimeMinutes": 60
    },
    "TimeAttackOptions": {
        "GroupId": 2
    },
    "ResourceVersionOptions": {
        "Android": "gZ5HdDa0bGeMbhUG",
        "Ios": "KXgVrbbdcdpQw3X7"
    }
}
