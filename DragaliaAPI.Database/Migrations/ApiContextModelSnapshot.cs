// <auto-generated />
using System;
using DragaliaAPI.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DragaliaAPI.Database.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbAbilityCrest", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("AbilityCrestId")
                        .HasColumnType("integer");

                    b.Property<int>("AttackPlusCount")
                        .HasColumnType("integer");

                    b.Property<int>("BuildupCount")
                        .HasColumnType("integer");

                    b.Property<int>("EquipableCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("GetTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("HpPlusCount")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<int>("LimitBreakCount")
                        .HasColumnType("integer");

                    b.HasKey("DeviceAccountId", "AbilityCrestId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerAbilityCrests");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbAbilityCrestSet", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("AbilityCrestSetNo")
                        .HasColumnType("integer");

                    b.Property<string>("AbilityCrestSetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CrestSlotType1CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("CrestSlotType1CrestId2")
                        .HasColumnType("integer");

                    b.Property<int>("CrestSlotType1CrestId3")
                        .HasColumnType("integer");

                    b.Property<int>("CrestSlotType2CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("CrestSlotType2CrestId2")
                        .HasColumnType("integer");

                    b.Property<int>("CrestSlotType3CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("CrestSlotType3CrestId2")
                        .HasColumnType("integer");

                    b.Property<decimal>("TalismanKeyId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("DeviceAccountId", "AbilityCrestSetNo");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerAbilityCrestSets");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbDeviceAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DeviceAccounts");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbEquippedStamp", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("Slot")
                        .HasColumnType("integer");

                    b.Property<int>("StampId")
                        .HasColumnType("integer");

                    b.HasKey("DeviceAccountId", "Slot");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("EquippedStamps");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbFortBuild", b =>
                {
                    b.Property<long>("BuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("BuildId"));

                    b.Property<DateTimeOffset>("BuildEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("BuildStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeviceAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("LastIncomeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("PlantId")
                        .HasColumnType("integer");

                    b.Property<int>("PositionX")
                        .HasColumnType("integer");

                    b.Property<int>("PositionZ")
                        .HasColumnType("integer");

                    b.HasKey("BuildId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerFortBuilds");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbFortDetail", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("CarpenterNum")
                        .HasColumnType("integer")
                        .HasColumnName("CarpenterNum");

                    b.HasKey("DeviceAccountId");

                    b.HasIndex("DeviceAccountId")
                        .IsUnique();

                    b.ToTable("PlayerFortDetail");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbParty", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("PartyNo")
                        .HasColumnType("integer");

                    b.Property<string>("PartyName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("DeviceAccountId", "PartyNo");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PartyData");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPartyUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("CharaId")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EditSkill1CharaId")
                        .HasColumnType("integer");

                    b.Property<int>("EditSkill2CharaId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType1CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType1CrestId2")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType1CrestId3")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType2CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType2CrestId2")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType3CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType3CrestId2")
                        .HasColumnType("integer");

                    b.Property<long>("EquipDragonKeyId")
                        .HasColumnType("bigint");

                    b.Property<long>("EquipTalismanKeyId")
                        .HasColumnType("bigint");

                    b.Property<int>("EquipWeaponBodyId")
                        .HasColumnType("integer");

                    b.Property<int>("EquipWeaponSkinId")
                        .HasColumnType("integer");

                    b.Property<int>("PartyNo")
                        .HasColumnType("integer");

                    b.Property<int>("UnitNo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DeviceAccountId");

                    b.HasIndex("DeviceAccountId", "PartyNo");

                    b.ToTable("PlayerPartyUnits");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayer", b =>
                {
                    b.Property<string>("AccountId")
                        .HasColumnType("text");

                    b.Property<int>("SavefileVersion")
                        .HasColumnType("integer");

                    b.HasKey("AccountId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerBannerData", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("SummonBannerId")
                        .HasColumnType("integer")
                        .HasColumnName("SummonBannerId");

                    b.Property<int>("ConsecutionSummonPoints")
                        .HasColumnType("integer")
                        .HasColumnName("CsSummonPoints");

                    b.Property<DateTimeOffset>("ConsecutionSummonPointsMaxDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CsSummonPointsMaxDate");

                    b.Property<DateTimeOffset>("ConsecutionSummonPointsMinDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CsSummonPointsMinDate");

                    b.Property<int>("DailyLimitedSummonCount")
                        .HasColumnType("integer")
                        .HasColumnName("DailyLimitedSummons");

                    b.Property<int>("IsBeginnerFreeSummonAvailable")
                        .HasColumnType("integer")
                        .HasColumnName("BeginnerSummonAvailable");

                    b.Property<int>("IsConsecutionFreeSummonAvailable")
                        .HasColumnType("integer")
                        .HasColumnName("CsSummonAvailable");

                    b.Property<int>("IsFreeSummonAvailable")
                        .HasColumnType("integer")
                        .HasColumnName("FreeSummonAvailable");

                    b.Property<byte>("PityRate")
                        .HasColumnType("smallint")
                        .HasColumnName("Pity");

                    b.Property<int>("SummonCount")
                        .HasColumnType("integer")
                        .HasColumnName("SummonCount");

                    b.Property<int>("SummonPoints")
                        .HasColumnType("integer")
                        .HasColumnName("SummonPoints");

                    b.HasKey("DeviceAccountId", "SummonBannerId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerBannerData");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerCharaData", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("CharaId")
                        .HasColumnType("integer")
                        .HasColumnName("CharaId");

                    b.Property<byte>("Ability1Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Abil1Lvl");

                    b.Property<byte>("Ability2Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Abil2Lvl");

                    b.Property<byte>("Ability3Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Abil3Lvl");

                    b.Property<int>("AttackBase")
                        .HasColumnType("integer")
                        .HasColumnName("AtkBase");

                    b.Property<int>("AttackNode")
                        .HasColumnType("integer")
                        .HasColumnName("AtkNode");

                    b.Property<byte>("AttackPlusCount")
                        .HasColumnType("smallint")
                        .HasColumnName("AtkPlusCount");

                    b.Property<byte>("BurstAttackLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("BurstAtkLvl");

                    b.Property<int>("ComboBuildupCount")
                        .HasColumnType("integer")
                        .HasColumnName("ComboBuildupCount");

                    b.Property<byte>("ExAbility2Level")
                        .HasColumnType("smallint")
                        .HasColumnName("ExAbility2Lvl");

                    b.Property<byte>("ExAbilityLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("ExAbility1Lvl");

                    b.Property<int>("Exp")
                        .HasColumnType("integer")
                        .HasColumnName("Exp");

                    b.Property<DateTimeOffset>("GetTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("GetTime");

                    b.Property<int>("HpBase")
                        .HasColumnType("integer")
                        .HasColumnName("HpBase");

                    b.Property<int>("HpNode")
                        .HasColumnType("integer")
                        .HasColumnName("HpNode");

                    b.Property<byte>("HpPlusCount")
                        .HasColumnType("smallint")
                        .HasColumnName("HpPlusCount");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean")
                        .HasColumnName("IsNew");

                    b.Property<bool>("IsTemporary")
                        .HasColumnType("boolean")
                        .HasColumnName("IsTemp");

                    b.Property<bool>("IsUnlockEditSkill")
                        .HasColumnType("boolean")
                        .HasColumnName("IsUnlockEditSkill");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Level");

                    b.Property<bool>("ListViewFlag")
                        .HasColumnType("boolean")
                        .HasColumnName("ListViewFlag");

                    b.Property<int>("ManaNodeUnlockCount")
                        .HasColumnType("integer")
                        .HasColumnName("ManaNodeUnlockCount");

                    b.Property<byte>("Rarity")
                        .HasColumnType("smallint")
                        .HasColumnName("Rarity");

                    b.Property<byte>("Skill1Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Skill1Lvl");

                    b.Property<byte>("Skill2Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Skill2Lvl");

                    b.HasKey("DeviceAccountId", "CharaId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerCharaData");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerCurrency", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("integer")
                        .HasColumnName("CurrencyType");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint")
                        .HasColumnName("Quantity");

                    b.HasKey("DeviceAccountId", "CurrencyType");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerCurrency");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerDragonData", b =>
                {
                    b.Property<long>("DragonKeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("DragonKeyId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("DragonKeyId"));

                    b.Property<byte>("Ability1Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Abil1Level");

                    b.Property<byte>("Ability2Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Abil2Level");

                    b.Property<byte>("AttackPlusCount")
                        .HasColumnType("smallint")
                        .HasColumnName("AttackPlusCount");

                    b.Property<string>("DeviceAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DragonId")
                        .HasColumnType("integer")
                        .HasColumnName("DragonId");

                    b.Property<int>("Exp")
                        .HasColumnType("integer")
                        .HasColumnName("Exp");

                    b.Property<DateTimeOffset>("GetTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("GetTime");

                    b.Property<byte>("HpPlusCount")
                        .HasColumnType("smallint")
                        .HasColumnName("HpPlusCount");

                    b.Property<bool>("IsLock")
                        .HasColumnType("boolean")
                        .HasColumnName("IsLocked");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean")
                        .HasColumnName("IsNew");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Level");

                    b.Property<byte>("LimitBreakCount")
                        .HasColumnType("smallint")
                        .HasColumnName("LimitBreakCount");

                    b.Property<byte>("Skill1Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Skill1Level");

                    b.HasKey("DragonKeyId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerDragonData");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerDragonGift", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text")
                        .HasColumnName("DeviceAccountId");

                    b.Property<int>("DragonGiftId")
                        .HasColumnType("integer")
                        .HasColumnName("DragonGiftId");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("Quantity");

                    b.HasKey("DeviceAccountId", "DragonGiftId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerDragonGift");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerDragonReliability", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("DragonId")
                        .HasColumnType("integer")
                        .HasColumnName("DragonId");

                    b.Property<int>("Exp")
                        .HasColumnType("integer")
                        .HasColumnName("TotalExp");

                    b.Property<DateTimeOffset>("GetTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastContactTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastContactTime");

                    b.Property<byte>("Level")
                        .HasColumnType("smallint")
                        .HasColumnName("Level");

                    b.HasKey("DeviceAccountId", "DragonId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerDragonReliability");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerMaterial", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("MaterialId");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("Quantity");

                    b.HasKey("DeviceAccountId", "MaterialId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerMaterial");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerMission", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("MissionId");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("Type");

                    b.Property<DateTimeOffset>("End")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EndDate");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("GroupId");

                    b.Property<bool>("Pickup")
                        .HasColumnType("boolean")
                        .HasColumnName("Pickup");

                    b.Property<int>("Progress")
                        .HasColumnType("integer")
                        .HasColumnName("Progress");

                    b.Property<DateTimeOffset>("Start")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartDate");

                    b.Property<int>("State")
                        .HasColumnType("integer")
                        .HasColumnName("State");

                    b.HasKey("DeviceAccountId", "Id", "Type");

                    b.ToTable("PlayerMissions");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerPresent", b =>
                {
                    b.Property<long>("PresentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PresentId");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("PresentId"));

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreateTime");

                    b.Property<string>("DeviceAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer")
                        .HasColumnName("EntityId");

                    b.Property<int>("EntityLevel")
                        .HasColumnType("integer")
                        .HasColumnName("EntityLevel");

                    b.Property<int>("EntityLimitBreakCount")
                        .HasColumnType("integer")
                        .HasColumnName("EntityLimitBreakCount");

                    b.Property<int>("EntityQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("EntityQuantity");

                    b.Property<int>("EntityStatusPlusCount")
                        .HasColumnType("integer")
                        .HasColumnName("EntityStatusPlusCount");

                    b.Property<int>("EntityType")
                        .HasColumnType("integer")
                        .HasColumnName("EntityType");

                    b.Property<long>("MasterId")
                        .HasColumnType("bigint")
                        .HasColumnName("MasterId");

                    b.Property<int>("MessageId")
                        .HasColumnType("integer")
                        .HasColumnName("MessageId");

                    b.Property<int>("MessageParamValue1")
                        .HasColumnType("integer")
                        .HasColumnName("MessageParamValue1");

                    b.Property<int>("MessageParamValue2")
                        .HasColumnType("integer")
                        .HasColumnName("MessageParamValue2");

                    b.Property<int>("MessageParamValue3")
                        .HasColumnType("integer")
                        .HasColumnName("MessageParamValue3");

                    b.Property<int>("MessageParamValue4")
                        .HasColumnType("integer")
                        .HasColumnName("MessageParamValue4");

                    b.Property<DateTimeOffset?>("ReceiveLimitTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ReceiveLimitTime");

                    b.Property<long>("State")
                        .HasColumnType("bigint")
                        .HasColumnName("State");

                    b.HasKey("PresentId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerPresent");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerPresentHistory", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreateTime");

                    b.Property<string>("DeviceAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer")
                        .HasColumnName("EntityId");

                    b.Property<int>("EntityLevel")
                        .HasColumnType("integer")
                        .HasColumnName("EntityLevel");

                    b.Property<int>("EntityLimitBreakCount")
                        .HasColumnType("integer")
                        .HasColumnName("EntityLimitBreakCount");

                    b.Property<int>("EntityQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("EntityQuantity");

                    b.Property<int>("EntityStatusPlusCount")
                        .HasColumnType("integer")
                        .HasColumnName("EntityStatusPlusCount");

                    b.Property<int>("EntityType")
                        .HasColumnType("integer")
                        .HasColumnName("EntityType");

                    b.Property<int>("MessageId")
                        .HasColumnType("integer")
                        .HasColumnName("MessageId");

                    b.Property<int>("MessageParamValue1")
                        .HasColumnType("integer")
                        .HasColumnName("MessageParamValue1");

                    b.Property<int>("MessageParamValue2")
                        .HasColumnType("integer")
                        .HasColumnName("MessageParamValue2");

                    b.Property<int>("MessageParamValue3")
                        .HasColumnType("integer")
                        .HasColumnName("MessageParamValue3");

                    b.Property<int>("MessageParamValue4")
                        .HasColumnType("integer")
                        .HasColumnName("MessageParamValue4");

                    b.HasKey("Id");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerPresentHistory");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerShopInfo", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("DailySummonCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("LastSummonTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("DeviceAccountId");

                    b.ToTable("PlayerShopInfos");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerShopPurchase", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("GoodsId")
                        .HasColumnType("integer");

                    b.Property<int>("BuyCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("EffectEndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("EffectStartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastBuyTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ShopType")
                        .HasColumnType("integer");

                    b.HasKey("DeviceAccountId", "GoodsId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerPurchases");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerStoryState", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("StoryType")
                        .HasColumnType("integer")
                        .HasColumnName("StoryType");

                    b.Property<int>("StoryId")
                        .HasColumnType("integer")
                        .HasColumnName("StoryId");

                    b.Property<int>("State")
                        .HasColumnType("integer")
                        .HasColumnName("State");

                    b.HasKey("DeviceAccountId", "StoryType", "StoryId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerStoryState");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerSummonHistory", b =>
                {
                    b.Property<long>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("KeyId"));

                    b.Property<string>("DeviceAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityAttackPlusCount")
                        .HasColumnType("integer")
                        .HasColumnName("AtkPlusCount");

                    b.Property<int>("EntityHpPlusCount")
                        .HasColumnType("integer")
                        .HasColumnName("HpPlusCount");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer")
                        .HasColumnName("EntityId");

                    b.Property<byte>("EntityLevel")
                        .HasColumnType("smallint")
                        .HasColumnName("Level");

                    b.Property<byte>("EntityLimitBreakCount")
                        .HasColumnType("smallint")
                        .HasColumnName("LimitBreakCount");

                    b.Property<int>("EntityQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("Quantity");

                    b.Property<byte>("EntityRarity")
                        .HasColumnType("smallint")
                        .HasColumnName("Rarity");

                    b.Property<int>("EntityType")
                        .HasColumnType("integer")
                        .HasColumnName("EntityType");

                    b.Property<DateTimeOffset>("ExecDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("SummonDate");

                    b.Property<int>("GetDewPointQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("DewPointGet");

                    b.Property<int>("PaymentType")
                        .HasColumnType("integer")
                        .HasColumnName("PaymentType");

                    b.Property<byte>("SummonExecType")
                        .HasColumnType("smallint")
                        .HasColumnName("SummonExecType");

                    b.Property<int>("SummonId")
                        .HasColumnType("integer")
                        .HasColumnName("BannerId");

                    b.Property<int>("SummonPoint")
                        .HasColumnType("integer")
                        .HasColumnName("SummonPointGet");

                    b.Property<int>("SummonPrizeRank")
                        .HasColumnType("integer")
                        .HasColumnName("SummonPrizeRank");

                    b.HasKey("KeyId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerSummonHistory");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerTrade", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("TradeId");

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("TradeCount");

                    b.Property<DateTimeOffset>("LastTradeTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("LastTrade");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("TradeType");

                    b.HasKey("DeviceAccountId", "Id");

                    b.HasIndex("DeviceAccountId");

                    b.HasIndex("DeviceAccountId", "Type");

                    b.ToTable("PlayerTrades");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerUserData", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("ActiveMemoryEventId")
                        .HasColumnType("integer");

                    b.Property<int>("BuildTimePoint")
                        .HasColumnType("integer");

                    b.Property<long>("Coin")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset>("CreateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Crystal")
                        .HasColumnType("integer");

                    b.Property<int>("DewPoint")
                        .HasColumnType("integer");

                    b.Property<int>("EmblemId")
                        .HasColumnType("integer");

                    b.Property<int>("Exp")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("FortOpenTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastLoginTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastSaveImportTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastStaminaMultiUpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("LastStaminaSingleUpdateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("MainPartyNo")
                        .HasColumnType("integer");

                    b.Property<int>("ManaPoint")
                        .HasColumnType("integer");

                    b.Property<int>("MaxDragonQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("QuestSkipPoint")
                        .HasColumnType("integer");

                    b.Property<int>("StaminaMulti")
                        .HasColumnType("integer");

                    b.Property<int>("StaminaMultiSurplusSecond")
                        .HasColumnType("integer");

                    b.Property<int>("StaminaSingle")
                        .HasColumnType("integer");

                    b.Property<int>("StaminaSingleSurplusSecond")
                        .HasColumnType("integer");

                    b.Property<int>("TutorialFlag")
                        .HasColumnType("integer");

                    b.Property<int>("TutorialStatus")
                        .HasColumnType("integer");

                    b.Property<long>("ViewerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ViewerId"));

                    b.HasKey("DeviceAccountId");

                    b.HasIndex("DeviceAccountId")
                        .IsUnique();

                    b.ToTable("PlayerUserData");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbQuest", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("QuestId")
                        .HasColumnType("integer");

                    b.Property<float>("BestClearTime")
                        .HasColumnType("real");

                    b.Property<int>("DailyPlayCount")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAppear")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMissionClear1")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMissionClear2")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsMissionClear3")
                        .HasColumnType("boolean");

                    b.Property<int>("LastDailyResetTime")
                        .HasColumnType("integer");

                    b.Property<int>("LastWeeklyResetTime")
                        .HasColumnType("integer");

                    b.Property<int>("PlayCount")
                        .HasColumnType("integer");

                    b.Property<byte>("State")
                        .HasColumnType("smallint");

                    b.Property<int>("WeeklyPlayCount")
                        .HasColumnType("integer");

                    b.HasKey("DeviceAccountId", "QuestId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerQuests");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbSetUnit", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("CharaId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitSetNo")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType1CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType1CrestId2")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType1CrestId3")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType2CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType2CrestId2")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType3CrestId1")
                        .HasColumnType("integer");

                    b.Property<int>("EquipCrestSlotType3CrestId2")
                        .HasColumnType("integer");

                    b.Property<long>("EquipDragonKeyId")
                        .HasColumnType("bigint");

                    b.Property<long>("EquipTalismanKeyId")
                        .HasColumnType("bigint");

                    b.Property<int>("EquipWeaponBodyId")
                        .HasColumnType("integer");

                    b.Property<string>("UnitSetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeviceAccountId", "CharaId", "UnitSetNo");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerSetUnit");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbTalisman", b =>
                {
                    b.Property<long>("TalismanKeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("TalismanKeyId"));

                    b.Property<int>("AdditionalAttack")
                        .HasColumnType("integer");

                    b.Property<int>("AdditionalHp")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceAccountId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("GetTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsLock")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<int>("TalismanAbilityId1")
                        .HasColumnType("integer");

                    b.Property<int>("TalismanAbilityId2")
                        .HasColumnType("integer");

                    b.Property<int>("TalismanAbilityId3")
                        .HasColumnType("integer");

                    b.Property<int>("TalismanId")
                        .HasColumnType("integer");

                    b.HasKey("TalismanKeyId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerTalismans");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbWeaponBody", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("WeaponBodyId")
                        .HasColumnType("integer");

                    b.Property<int>("AdditionalCrestSlotType1Count")
                        .HasColumnType("integer");

                    b.Property<int>("AdditionalCrestSlotType2Count")
                        .HasColumnType("integer");

                    b.Property<int>("AdditionalCrestSlotType3Count")
                        .HasColumnType("integer");

                    b.Property<int>("BuildupCount")
                        .HasColumnType("integer");

                    b.Property<int>("EquipableCount")
                        .HasColumnType("integer");

                    b.Property<int>("FortPassiveCharaWeaponBuildupCount")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("GetTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean");

                    b.Property<int>("LimitBreakCount")
                        .HasColumnType("integer");

                    b.Property<int>("LimitOverCount")
                        .HasColumnType("integer");

                    b.Property<string>("UnlockWeaponPassiveAbilityNoString")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeviceAccountId", "WeaponBodyId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerWeapons");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbWeaponPassiveAbility", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("WeaponPassiveAbilityId")
                        .HasColumnType("integer");

                    b.HasKey("DeviceAccountId", "WeaponPassiveAbilityId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerPassiveAbilities");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbWeaponSkin", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("text");

                    b.Property<int>("WeaponSkinId")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("GetTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsNew")
                        .HasColumnType("boolean");

                    b.HasKey("DeviceAccountId", "WeaponSkinId");

                    b.HasIndex("DeviceAccountId");

                    b.ToTable("PlayerWeaponSkins");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbAbilityCrest", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("AbilityCrestList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbAbilityCrestSet", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("AbilityCrestSetList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbEquippedStamp", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("EquippedStampList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbFortBuild", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("BuildList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbFortDetail", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithOne("FortDetail")
                        .HasForeignKey("DragaliaAPI.Database.Entities.DbFortDetail", "DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbParty", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("PartyList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPartyUnit", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbParty", "Party")
                        .WithMany("Units")
                        .HasForeignKey("DeviceAccountId", "PartyNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Party");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerBannerData", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("UserSummonList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerCharaData", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("CharaList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerCurrency", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("Currencies")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerDragonData", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("DragonList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerDragonGift", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("DragonGiftList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerDragonReliability", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("DragonReliabilityList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerMaterial", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("MaterialList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerMission", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany()
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerPresent", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany()
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerPresentHistory", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany()
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerShopInfo", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany()
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerShopPurchase", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany()
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerStoryState", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("StoryStates")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerSummonHistory", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("SummonHistory")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerTrade", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany()
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayerUserData", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithOne("UserData")
                        .HasForeignKey("DragaliaAPI.Database.Entities.DbPlayerUserData", "DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbQuest", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("QuestList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbSetUnit", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("UnitSets")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbTalisman", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("TalismanList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbWeaponBody", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("WeaponBodyList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbWeaponPassiveAbility", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("WeaponPassiveAbilityList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbWeaponSkin", b =>
                {
                    b.HasOne("DragaliaAPI.Database.Entities.DbPlayer", "Owner")
                        .WithMany("WeaponSkinList")
                        .HasForeignKey("DeviceAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbParty", b =>
                {
                    b.Navigation("Units");
                });

            modelBuilder.Entity("DragaliaAPI.Database.Entities.DbPlayer", b =>
                {
                    b.Navigation("AbilityCrestList");

                    b.Navigation("AbilityCrestSetList");

                    b.Navigation("BuildList");

                    b.Navigation("CharaList");

                    b.Navigation("Currencies");

                    b.Navigation("DragonGiftList");

                    b.Navigation("DragonList");

                    b.Navigation("DragonReliabilityList");

                    b.Navigation("EquippedStampList");

                    b.Navigation("FortDetail");

                    b.Navigation("MaterialList");

                    b.Navigation("PartyList");

                    b.Navigation("QuestList");

                    b.Navigation("StoryStates");

                    b.Navigation("SummonHistory");

                    b.Navigation("TalismanList");

                    b.Navigation("UnitSets");

                    b.Navigation("UserData");

                    b.Navigation("UserSummonList");

                    b.Navigation("WeaponBodyList");

                    b.Navigation("WeaponPassiveAbilityList");

                    b.Navigation("WeaponSkinList");
                });
#pragma warning restore 612, 618
        }
    }
}
