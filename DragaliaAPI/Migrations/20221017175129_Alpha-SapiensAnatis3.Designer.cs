// <auto-generated />
using DragaliaAPI.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DragaliaAPI.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20221017175129_Alpha-SapiensAnatis3")]
    partial class AlphaSapiensAnatis3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.HasSequence("Dragon_key_id", "dbo")
                .StartsAt(10000000000L);

            modelBuilder.HasSequence("Viewer_id", "dbo")
                .StartsAt(10000000000L);

            modelBuilder.Entity("DragaliaAPI.Models.Database.DbDeviceAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceAccounts");

                    b.HasData(
                        new
                        {
                            Id = "id",
                            HashedPassword = "NMvdakTznEF6khwWcz17i6GTnDA="
                        });
                });

            modelBuilder.Entity("DragaliaAPI.Models.Database.Savefile.DbPlayerCharaData", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CharaId")
                        .HasColumnType("int");

                    b.Property<byte>("AdditionalMaxLevel")
                        .HasColumnType("tinyint");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<byte>("AttackPlusCount")
                        .HasColumnType("tinyint");

                    b.Property<byte>("BurstAttackLevel")
                        .HasColumnType("tinyint");

                    b.Property<int>("ComboBuildupCount")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<byte>("FirstAbilityLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FirstExAbilityLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FirstSkillLevel")
                        .HasColumnType("tinyint");

                    b.Property<int>("GetTime")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<byte>("HpPlusCount")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTemporary")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnlockEditSkill")
                        .HasColumnType("bit");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LimitBreakCount")
                        .HasColumnType("tinyint");

                    b.Property<bool>("ListViewFlag")
                        .HasColumnType("bit");

                    b.Property<int>("ManaNodeUnlockCount")
                        .HasColumnType("int");

                    b.Property<byte>("Rarity")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SecondAbilityLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SecondExAbilityLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SecondSkillLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ThirdAbilityLevel")
                        .HasColumnType("tinyint");

                    b.HasKey("DeviceAccountId", "CharaId");

                    b.ToTable("PlayerCharaData");
                });

            modelBuilder.Entity("DragaliaAPI.Models.Database.Savefile.DbPlayerDragonData", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("DragonKeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.Dragon_key_id");

                    b.Property<byte>("AttackPlusCount")
                        .HasColumnType("tinyint");

                    b.Property<int>("DragonId")
                        .HasColumnType("int");

                    b.Property<long>("Exp")
                        .HasColumnType("bigint");

                    b.Property<byte>("FirstAbilityLevel")
                        .HasColumnType("tinyint");

                    b.Property<byte>("FirstSkillLevel")
                        .HasColumnType("tinyint");

                    b.Property<int>("GetTime")
                        .HasColumnType("int");

                    b.Property<byte>("HpPlusCount")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<byte>("Level")
                        .HasColumnType("tinyint");

                    b.Property<byte>("LimitBreakCount")
                        .HasColumnType("tinyint");

                    b.Property<byte>("SecondAbilityLevel")
                        .HasColumnType("tinyint");

                    b.HasKey("DeviceAccountId", "DragonKeyId");

                    b.ToTable("PlayerDragonData");
                });

            modelBuilder.Entity("DragaliaAPI.Models.Database.Savefile.DbPlayerDragonReliability", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DragonId")
                        .HasColumnType("int");

                    b.Property<long>("LastContactTime")
                        .HasColumnType("bigint");

                    b.Property<long>("ReliabilityExp")
                        .HasColumnType("bigint");

                    b.Property<long>("ReliabilityTotalExp")
                        .HasColumnType("bigint");

                    b.HasKey("DeviceAccountId", "DragonId");

                    b.ToTable("PlayerDragonReliability");
                });

            modelBuilder.Entity("DragaliaAPI.Models.Database.Savefile.DbPlayerUnitStory", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte>("EntityType")
                        .HasColumnType("tinyint");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<long>("StoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("DragonId")
                        .HasColumnType("bit");

                    b.HasKey("DeviceAccountId", "EntityType", "EntityId", "StoryId");

                    b.ToTable("PlayerUnitStory");
                });

            modelBuilder.Entity("DragaliaAPI.Models.Database.Savefile.DbPlayerUserData", b =>
                {
                    b.Property<string>("DeviceAccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ActiveMemoryEventId")
                        .HasColumnType("int");

                    b.Property<int>("BuildTimePoint")
                        .HasColumnType("int");

                    b.Property<int>("Coin")
                        .HasColumnType("int");

                    b.Property<int>("CreateTime")
                        .HasColumnType("int");

                    b.Property<int>("Crystal")
                        .HasColumnType("int");

                    b.Property<int>("DewPoint")
                        .HasColumnType("int");

                    b.Property<int>("EmblemId")
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("FortOpenTime")
                        .HasColumnType("int");

                    b.Property<int>("IsOptin")
                        .HasColumnType("int");

                    b.Property<int>("LastLoginTime")
                        .HasColumnType("int");

                    b.Property<int>("LastStaminaMultiUpdateTime")
                        .HasColumnType("int");

                    b.Property<int>("LastStaminaSingleUpdateTime")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MainPartyNo")
                        .HasColumnType("int");

                    b.Property<int>("ManaPoint")
                        .HasColumnType("int");

                    b.Property<int>("MaxAmuletQuantity")
                        .HasColumnType("int");

                    b.Property<int>("MaxDragonQuantity")
                        .HasColumnType("int");

                    b.Property<int>("MaxWeaponQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrologueEndTime")
                        .HasColumnType("int");

                    b.Property<int>("QuestSkipPoint")
                        .HasColumnType("int");

                    b.Property<int>("StaminaMulti")
                        .HasColumnType("int");

                    b.Property<int>("StaminaMultiSurplusSecond")
                        .HasColumnType("int");

                    b.Property<int>("StaminaSingle")
                        .HasColumnType("int");

                    b.Property<int>("StaminaSingleSurplusSecond")
                        .HasColumnType("int");

                    b.Property<int>("TutorialFlag")
                        .HasColumnType("int");

                    b.Property<int>("TutorialStatus")
                        .HasColumnType("int");

                    b.Property<long>("ViewerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.Viewer_id");

                    b.HasKey("DeviceAccountId");

                    b.ToTable("PlayerUserData");

                    b.HasData(
                        new
                        {
                            DeviceAccountId = "id",
                            ActiveMemoryEventId = 0,
                            BuildTimePoint = 0,
                            Coin = 0,
                            CreateTime = 1666029088,
                            Crystal = 0,
                            DewPoint = 0,
                            EmblemId = 40000001,
                            Exp = 0,
                            FortOpenTime = 0,
                            IsOptin = 0,
                            LastLoginTime = 0,
                            LastStaminaMultiUpdateTime = 0,
                            LastStaminaSingleUpdateTime = 0,
                            Level = 1,
                            MainPartyNo = 1,
                            ManaPoint = 0,
                            MaxAmuletQuantity = 0,
                            MaxDragonQuantity = 160,
                            MaxWeaponQuantity = 0,
                            Name = "Euden",
                            PrologueEndTime = 0,
                            QuestSkipPoint = 0,
                            StaminaMulti = 12,
                            StaminaMultiSurplusSecond = 0,
                            StaminaSingle = 18,
                            StaminaSingleSurplusSecond = 0,
                            TutorialFlag = 0,
                            TutorialStatus = 0,
                            ViewerId = 0L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
