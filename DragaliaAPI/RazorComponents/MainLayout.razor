@using DragaliaAPI.Blazor.Authentication;
@using DragaliaAPI.Shared.PlayerDetails;

@inject IBlazorIdentityService BlazorIdentityService;
@inject NavigationManager NavigationManager;

@inherits LayoutComponentBase


<MudThemeProvider Theme="theme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    @if (this.HttpRequestState?.HideAppBar ?? false == true)
    {
    }
    else 
    {
        <MudAppBar Elevation="0">
            <MudBreakpointProvider>
            <MudHidden Breakpoint="Breakpoint.MdAndUp" Invert="true">
                <MudText Typo="Typo.h5" Class="m1-3">Dawnshard</MudText>
                <div class="pl-3 d-flex flex-row" style="width: 10%">
                    <NavMenu />
                </div>
            </MudHidden>
            <MudHidden Breakpoint="Breakpoint.SmAndDown" Invert="true">
                <MudToggleIconButton Edge=Edge.Start @bind-Toggled=navDrawerOpen Icon=@Icons.Material.Filled.Menu ToggledIcon=@Icons.Material.Filled.Menu Color="Color.Inherit" ToggledColor="Color.Inherit" />
                <MudText Typo="Typo.h5" Class="m1-3">Dawnshard</MudText>
            </MudHidden>
            </MudBreakpointProvider>
            <MudSpacer />
            <AuthorizeView>
                <Authorized>
                    <div>
                    <MudToggleIconButton Edge=Edge.End Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" ToggledIcon="@Icons.Material.Filled.AccountCircle" ToggledColor="Color.Inherit" @bind-Toggled="@popoverOpen" />
                    <MudPopover Open="@popoverOpen" Paper=true  Class="pt-2 pl-3 pr-3" AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                        <div class="d-flex flex-column">
                            <MudText Typo="Typo.subtitle1" >Hello, @BlazorIdentityService.UserDataName</MudText>
                            <MudList Clickable="true" Dense="true">
                                <MudListItem Icon="@Icons.Material.Filled.Settings" IconSize="Size.Small" Href="/account">Account Management</MudListItem>
                                <MudListItem Icon="@Icons.Material.Filled.Logout" IconSize="Size.Small" OnClick=OnClickLogout>Logout</MudListItem>
                            </MudList>
                        </div>
                        <MudOverlay @bind-Visible="@popoverOpen" AutoClose=true ZIndex="-1"></MudOverlay>
                    </MudPopover>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <LoginButton/>
                </NotAuthorized>
            </AuthorizeView>
        </MudAppBar>    
    }
    <MudDrawer @bind-Open=navDrawerOpen Elevation="2" ClipMode="DrawerClipMode.Always" DisableOverlay=true>
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="@MainContainerClass">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>



@code {
    private bool popoverOpen = false;
    private bool navDrawerOpen = false;

    [CascadingParameter(Name = "HttpRequestState")]
    protected HttpRequestState? HttpRequestState { get; set; }

    private bool HideAppBar => this.HttpRequestState?.HideAppBar ?? false;

    private string MainContainerClass => this.HideAppBar ? "" : "my-8 pt-1";

    MudTheme theme = new()
        {
            PaletteDark = new PaletteDark()
            { 
                AppbarBackground = Colors.DeepPurple.Darken3
            },
            Palette = new PaletteLight()
            {
                AppbarBackground = Colors.Teal.Default
            }
        };

    public void OnClickLogout()
    {
        NavigationManager.NavigateTo("/logout", forceLoad: true);
    }
 
}